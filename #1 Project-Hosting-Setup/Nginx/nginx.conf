
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {}

http {

  client_max_body_size 20M;
 #  client_body_timeout 100;
 # client_header_timeout 100;
 
        proxy_connect_timeout 10080s;
        proxy_send_timeout 10080;
        proxy_read_timeout 10080;
        proxy_buffer_size 64k;
        proxy_buffers 16 32k;
        proxy_busy_buffers_size 64k;
        proxy_redirect off;
        proxy_request_buffering off;
        proxy_buffering off;


# whitelisted ip addresses
map $remote_addr $maintenance {
     default 1;
     58.182.7.180 0;
     115.42.207.2 0;
     119.73.198.179 0;
     119.73.198.178 0;
     122.11.242.236 0;
}

map $http_user_agent $goodagent {
         default         1;
         ~Windows        0;
}

map $http_user_agent $tvagent {
         default         1;
         ~Mobile         1;  
         ~Windows        0;
#         ~Android        0;
         ~Linux          0;

}


#  proxy_request_buffering off;

  include /etc/nginx/mime.types;

  server_tokens off;

  upstream frontend {
    server 10.0.0.4:5008;  
 }
	
  upstream backend {
    server 10.0.0.4:5007;
  }

   upstream online_gallery {
    server 10.0.0.4:5010;
  }
   upstream digital_signage {
    server 10.0.0.4:5011;
  }
   upstream minio_api {
    server 10.0.0.4:9000;
  }

   upstream minio_web {
    server 10.0.0.4:9090;
  }


#######################################################
## MEGA ADMIN WEB CLIENT
#######################################################

  server {
    listen 443 ssl http2;
    server_name admin.megaadventure.store;

    error_page 404 /404milk.html;
    location = /404milk.html {
      root /etc/nginx/404;
      internal;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx/500;
      internal;
    }

    root /dev/null;

    ssl_certificate           /etc/nginx/ssl/mega-cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/mega-key.pem;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";

    access_log /dev/stdout;
    error_log /dev/stdout info;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection 1;
    add_header X-Content-Type-Options nosniff;

     proxy_set_header HOST $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-Proto https;
     proxy_set_header X-Forwarded-For $remote_addr;
     proxy_set_header X-Forwarded-Host $remote_addr;

    # don't cache it
    proxy_no_cache 1;
    # even if cached, don't try to use it
    proxy_cache_bypass 1; 

    location / {
        if ($maintenance) {
            return 404;
         }

      proxy_pass http://frontend;
      proxy_pass_request_headers on;
    }
		
  }


#######################################################
  # Redirect all HTTP to HTTPS
#######################################################
  server {
    listen 80 http2 default_server;
    return 301 https://$host$request_uri;
  }


#######################################################
## MEGA API
#######################################################
  server {
    listen 443 ssl http2;
    server_name api.megaadventure.store;

    error_page 404 /404milk.html;
    location = /404milk.html {
      root /etc/nginx/404;
      internal;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx/500;
      internal;
    }

    root /dev/null;

    ssl_certificate           /etc/nginx/ssl/mega-cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/mega-key.pem;

    # Enhanced SSL security configuration
    # Taken from letsencrypt certbot recommendations for nginx
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";


    access_log /dev/stdout;
    error_log /dev/stdout info;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection 1;
    add_header X-Content-Type-Options nosniff;

     proxy_set_header HOST $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-Proto https;
     proxy_set_header X-Forwarded-For $remote_addr;
     proxy_set_header X-Forwarded-Host $remote_addr;

    # don't cache it
    proxy_no_cache 1;
    # even if cached, don't try to use it
    proxy_cache_bypass 1; 

    location / {
      proxy_pass http://backend;
      proxy_pass_request_headers on;
    }

###############################
###  Swagger ####
###############################
   location /swagger {
        if ($maintenance) {
            return 404;
         }

        proxy_pass http://backend;
        proxy_pass_request_headers on;
     
 }

###############################
###  Access The Excel_Files ####
###############################
   location /MegaEventReports {
            alias /home/;
      }
   
   location /MegaProfileImages {
           alias /usr/megaimages/;
   }
		
}
#######################################################
## MEGA ONLINE GALLERY
#######################################################


  server {
    listen 443 ssl http2;
    server_name gallery.megaadventure.store;

    error_page 404 /404milk.html;
    location = /404milk.html {
      root /etc/nginx/404;
      internal;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx/500;
      internal;
    }

    root /dev/null;

    ssl_certificate           /etc/nginx/ssl/mega-cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/mega-key.pem;

    # Enhanced SSL security configuration
    # Taken from letsencrypt certbot recommendations for nginx
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";


    access_log /dev/stdout;
    error_log /dev/stdout info;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection 1;
    add_header X-Content-Type-Options nosniff;

     proxy_set_header HOST $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-Proto https;
     proxy_set_header X-Forwarded-For $remote_addr;
     proxy_set_header X-Forwarded-Host $remote_addr;

    # don't cache it
    proxy_no_cache 1;
    # even if cached, don't try to use it
    proxy_cache_bypass 1; 

    location / {
      proxy_pass http://online_gallery;
      proxy_pass_request_headers on;
    }

     location /api/v1 {
      proxy_pass http://backend;
      proxy_pass_request_headers on;

    }
		
  }

#######################################################
## MEGA DIGITAL SIGNAGE
#######################################################


  server {
    listen 443 ssl http2;
    server_name tv.megaadventure.store;


    error_page 404 /404milk.html;
    location = /404milk.html {
      root /etc/nginx/404;
      internal;
    }



    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx/500;
      internal;
    }

    root /dev/null;

    ssl_certificate           /etc/nginx/ssl/mega-cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/mega-key.pem;


    # Enhanced SSL security configuration
    # Taken from letsencrypt certbot recommendations for nginx
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";


    access_log /dev/stdout;
    error_log /dev/stdout info;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection 1;
    add_header X-Content-Type-Options nosniff;

     proxy_set_header HOST $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-Proto https;
     proxy_set_header X-Forwarded-For $remote_addr;
     proxy_set_header X-Forwarded-Host $remote_addr;

    # don't cache it
    proxy_no_cache 1;
    # even if cached, don't try to use it
    proxy_cache_bypass 1; 



    location / {

      proxy_pass http://digital_signage;
      proxy_pass_request_headers on;


      if ($tvagent) {

        return 404;
      }

     if ($maintenance) {
            return 404;
     }
    }

     location /api/v1 {
      proxy_pass http://backend;
      proxy_pass_request_headers on;

    }
		

  }


#######################################################
## MINIO API
#######################################################
server {
   listen       443 ssl;
   listen  [::]:443 ssl;
   server_name  minioapi.megaadventure.store;

   # Allow special characters in headers
   ignore_invalid_headers off;
   # Allow any size file to be uploaded.
   # Set to a value such as 1000m; to restrict file size to a specific value
   client_max_body_size 0;
   # Disable buffering
   proxy_buffering off;
   proxy_request_buffering off;


    error_page 404 /404nophotos.html;
    location = /404nophotos.html {
      root /etc/nginx/404;
      internal;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx/500;
      internal;
    }

    ssl_certificate           /etc/nginx/ssl/mega-cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/mega-key.pem;

    # Enhanced SSL security configuration
    # Taken from letsencrypt certbot recommendations for nginx
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";

    access_log /dev/stdout;
    error_log /dev/stdout info;



   location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_connect_timeout 300;
      # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      chunked_transfer_encoding off;

      proxy_intercept_errors on;
      error_page 403 = /404nophotos.html;
      error_page 404 = /404nophotos.html;

     
      proxy_pass http://minio_api; 
   }

 #   location @errors {
 #     root /etc/nginx/404/404.html;
 #    return 404;
 #   }

}


#######################################################
## MINIO WEB CONSOLE
#######################################################

server {

   listen       443 ssl;
   listen  [::]:443 ssl;

   server_name minioweb.megaadventure.store;

   # Allow special characters in headers
   ignore_invalid_headers off;
   # Allow any size file to be uploaded.
   # Set to a value such as 1000m; to restrict file size to a specific value
   client_max_body_size 0;
   # Disable buffering
   proxy_buffering off;
   proxy_request_buffering off;

    error_page 404 /404milk.html;
    location = /404milk.html {
      root /etc/nginx/404;
      internal;
    }


    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /etc/nginx/500;
      internal;
    }

    ssl_certificate           /etc/nginx/ssl/mega-cert.pem;
    ssl_certificate_key       /etc/nginx/ssl/mega-key.pem;

    # Enhanced SSL security configuration
    # Taken from letsencrypt certbot recommendations for nginx
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";

    access_log /dev/stdout;
    error_log /dev/stdout info;


    location / {
        if ($maintenance) {
     
       return 404;
         }

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;

      # This is necessary to pass the correct IP to be hashed
      real_ip_header X-Real-IP;

      proxy_connect_timeout 300;

      # To support websocket
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      chunked_transfer_encoding off;

      proxy_pass http://minio_web;
   }

}


}
